{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tic-Tac-Toe\\\\src\\\\Components\\\\TicTacToe.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Board from './Board';\nimport GameOver from './GameOver';\nimport GameState from './GameState';\nimport Reset from './Reset';\nimport gameOverSoundAssest from '../sounds/gameOver.wav';\nimport clickSoundAssest from '../sounds/click.wav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gameOverSound = new Audio(gameOverSoundAssest);\ngameOverSound.volume = 0.2;\nconst clickSound = new Audio(clickSoundAssest);\nclickSound.volume = 0.5;\nconst Player_X = 'X';\nconst Player_O = 'O';\nconst winningCombinations = [\n//for rows\n{\n  combo: [0, 1, 2],\n  strikeClass: \"strike-row-1\"\n}, {\n  combo: [3, 4, 5],\n  strikeClass: \"strike-row-2\"\n}, {\n  combo: [6, 7, 8],\n  strikeClass: \"strike-row-3\"\n},\n//for columns\n{\n  combo: [0, 3, 6],\n  strikeClass: \"strike-column-1\"\n}, {\n  combo: [1, 4, 7],\n  strikeClass: \"strike-column-2\"\n}, {\n  combo: [2, 5, 8],\n  strikeClass: \"strike-column-3\"\n},\n//for diagonals\n{\n  combo: [0, 4, 8],\n  strikeClass: \"strike-diagonal-1\"\n}, {\n  combo: [2, 4, 6],\n  strikeClass: \"strike-diagonal-2\"\n}];\nfunction checkWinner(tiles, setStrikeClass, setGameState) {\n  for (const {\n    combo,\n    strikeClass\n  } of winningCombinations) {\n    const tilevalue1 = tiles[combo[0]];\n    const tilevalue2 = tiles[combo[1]];\n    const tilevalue3 = tiles[combo[2]];\n    if (tilevalue1 != null && tilevalue1 === tilevalue2 && tilevalue1 === tilevalue3) {\n      setStrikeClass(strikeClass);\n      if (tilevalue1 == Player_O) {\n        setGameState(GameState.playerOwins);\n      } else {\n        setGameState(GameState.playerXwins);\n      }\n      return;\n    }\n  }\n  const areAllTilesFilledIn = tiles.every(tile => tile != null);\n  if (areAllTilesFilledIn) {\n    setGameState(GameState.draw);\n  }\n}\nconst TicTacToe = () => {\n  _s();\n  const [tiles, setTiles] = useState(Array(9).fill(null));\n  const [PlayerTurn, setPlayerTurn] = useState(Player_X);\n  const [strikeClass, setStrikeClass] = useState();\n  const [gameState, setGameState] = useState(GameState.inProgess);\n  useEffect(() => {\n    checkWinner(tiles, setStrikeClass, setGameState);\n  }, [tiles]);\n  useEffect(() => {\n    if (tiles.some(tile => tile !== null)) {\n      clickSound.play();\n    }\n  }, [tiles]);\n  useEffect(() => {\n    if (gameState !== GameState.inProgess) {\n      gameOverSound.play();\n    }\n  }, [gameState]);\n  const handleReset = () => {\n    setGameState(GameState.inProgess);\n    setTiles(Array(9).fill(null));\n    setPlayerTurn(Player_X);\n    setStrikeClass(null);\n  };\n  const handleTileClick = index => {\n    if (gameState != GameState.inProgess) {\n      return;\n    }\n    if (tiles[index] !== null) {\n      return;\n    }\n    const newTiles = [...tiles];\n    newTiles[index] = PlayerTurn;\n    setTiles(newTiles);\n    if (PlayerTurn === Player_X) {\n      setPlayerTurn(Player_O);\n    } else {\n      setPlayerTurn(Player_X);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      strikeClass: strikeClass,\n      PlayerTurn: PlayerTurn,\n      tiles: tiles,\n      onTileClick: handleTileClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GameOver, {\n      gameState: gameState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Reset, {\n      gameState: gameState,\n      onReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(TicTacToe, \"MYvFBJxiRIREm3wpDkd+uzRVoKo=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useEffect","useState","Board","GameOver","GameState","Reset","gameOverSoundAssest","clickSoundAssest","jsxDEV","_jsxDEV","gameOverSound","Audio","volume","clickSound","Player_X","Player_O","winningCombinations","combo","strikeClass","checkWinner","tiles","setStrikeClass","setGameState","tilevalue1","tilevalue2","tilevalue3","playerOwins","playerXwins","areAllTilesFilledIn","every","tile","draw","TicTacToe","_s","setTiles","Array","fill","PlayerTurn","setPlayerTurn","gameState","inProgess","some","play","handleReset","handleTileClick","index","newTiles","children","fileName","_jsxFileName","lineNumber","columnNumber","onTileClick","onReset","_c","$RefreshReg$"],"sources":["D:/Tic-Tac-Toe/src/Components/TicTacToe.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Board from './Board'\r\nimport GameOver from './GameOver';\r\nimport GameState from './GameState'\r\nimport Reset from './Reset';\r\nimport gameOverSoundAssest from '../sounds/gameOver.wav'\r\nimport clickSoundAssest from '../sounds/click.wav'\r\n\r\nconst gameOverSound=new Audio(gameOverSoundAssest);\r\ngameOverSound.volume=0.2;\r\nconst clickSound=new Audio(clickSoundAssest);\r\nclickSound.volume=0.5;\r\n\r\nconst Player_X='X';\r\nconst Player_O='O';\r\n\r\nconst winningCombinations=[\r\n    //for rows\r\n    {combo:[0,1,2] , strikeClass:\"strike-row-1\"},\r\n    {combo:[3,4,5] , strikeClass:\"strike-row-2\"},\r\n    {combo:[6,7,8] , strikeClass:\"strike-row-3\"},\r\n    //for columns\r\n    {combo:[0,3,6] , strikeClass:\"strike-column-1\"},\r\n    {combo:[1,4,7] , strikeClass:\"strike-column-2\"},\r\n    {combo:[2,5,8] , strikeClass:\"strike-column-3\"},\r\n    //for diagonals\r\n    {combo:[0,4,8] , strikeClass:\"strike-diagonal-1\"},\r\n    {combo:[2,4,6] , strikeClass:\"strike-diagonal-2\"},\r\n\r\n];\r\n\r\nfunction checkWinner(tiles, setStrikeClass , setGameState){\r\n    for(const {combo,strikeClass} of winningCombinations){\r\n        const tilevalue1=tiles[combo[0]];\r\n        const tilevalue2=tiles[combo[1]];\r\n        const tilevalue3=tiles[combo[2]];\r\n        if(tilevalue1!=null && tilevalue1===tilevalue2 && tilevalue1===tilevalue3){\r\n            setStrikeClass(strikeClass);\r\n            if(tilevalue1==Player_O){\r\n                setGameState(GameState.playerOwins);\r\n            }\r\n            else{\r\n                setGameState(GameState.playerXwins);\r\n            }\r\n            return;\r\n        }\r\n    }\r\n    const areAllTilesFilledIn=tiles.every((tile)=> tile!=null);\r\n    if(areAllTilesFilledIn){\r\n        setGameState(GameState.draw);\r\n    }\r\n}\r\nconst TicTacToe = () => {\r\n    const [tiles, setTiles] = useState(Array(9).fill(null));\r\n    const [PlayerTurn, setPlayerTurn] = useState(Player_X);\r\n    const [strikeClass, setStrikeClass] = useState();\r\n    const [gameState, setGameState] = useState(GameState.inProgess)\r\n    useEffect(()=>{\r\n        checkWinner(tiles, setStrikeClass , setGameState);\r\n    },[tiles]);\r\n    useEffect(()=>{\r\n        if(tiles.some((tile) => tile!==null)){\r\n            clickSound.play();\r\n        }\r\n    },[tiles]);\r\n\r\n    useEffect(()=>{\r\n        if( gameState !== GameState.inProgess){\r\n            gameOverSound.play();\r\n        }\r\n    },[gameState]);\r\n    const handleReset=()=>{\r\n        setGameState(GameState.inProgess);\r\n        setTiles(Array(9).fill(null));\r\n        setPlayerTurn(Player_X);\r\n        setStrikeClass(null);\r\n    }\r\n    const handleTileClick=(index)=>{\r\n        if(gameState!=GameState.inProgess){\r\n            return;\r\n        }\r\n        if(tiles[index]!== null){\r\n            return;\r\n        }\r\n        const newTiles=[...tiles]\r\n        newTiles[index]=PlayerTurn;\r\n        setTiles(newTiles);\r\n        if(PlayerTurn===Player_X){\r\n            setPlayerTurn(Player_O);\r\n        }\r\n        else{\r\n            setPlayerTurn(Player_X);\r\n        }\r\n\r\n    }\r\n  return(\r\n    <div>\r\n        <h1>Tic Tac Toe</h1>\r\n        <Board strikeClass={strikeClass} PlayerTurn={PlayerTurn} tiles={tiles} onTileClick={handleTileClick}/>\r\n        <GameOver gameState={gameState}/>\r\n        <Reset gameState={gameState} onReset={handleReset}/>\r\n    </div>\r\n  )\r\n    \r\n  \r\n}\r\n\r\nexport default TicTacToe"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,mBAAmB,MAAM,wBAAwB;AACxD,OAAOC,gBAAgB,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,aAAa,GAAC,IAAIC,KAAK,CAACL,mBAAmB,CAAC;AAClDI,aAAa,CAACE,MAAM,GAAC,GAAG;AACxB,MAAMC,UAAU,GAAC,IAAIF,KAAK,CAACJ,gBAAgB,CAAC;AAC5CM,UAAU,CAACD,MAAM,GAAC,GAAG;AAErB,MAAME,QAAQ,GAAC,GAAG;AAClB,MAAMC,QAAQ,GAAC,GAAG;AAElB,MAAMC,mBAAmB,GAAC;AACtB;AACA;EAACC,KAAK,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAAGC,WAAW,EAAC;AAAc,CAAC,EAC5C;EAACD,KAAK,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAAGC,WAAW,EAAC;AAAc,CAAC,EAC5C;EAACD,KAAK,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAAGC,WAAW,EAAC;AAAc,CAAC;AAC5C;AACA;EAACD,KAAK,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAAGC,WAAW,EAAC;AAAiB,CAAC,EAC/C;EAACD,KAAK,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAAGC,WAAW,EAAC;AAAiB,CAAC,EAC/C;EAACD,KAAK,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAAGC,WAAW,EAAC;AAAiB,CAAC;AAC/C;AACA;EAACD,KAAK,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAAGC,WAAW,EAAC;AAAmB,CAAC,EACjD;EAACD,KAAK,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAAGC,WAAW,EAAC;AAAmB,CAAC,CAEpD;AAED,SAASC,WAAWA,CAACC,KAAK,EAAEC,cAAc,EAAGC,YAAY,EAAC;EACtD,KAAI,MAAM;IAACL,KAAK;IAACC;EAAW,CAAC,IAAIF,mBAAmB,EAAC;IACjD,MAAMO,UAAU,GAACH,KAAK,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;IAChC,MAAMO,UAAU,GAACJ,KAAK,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;IAChC,MAAMQ,UAAU,GAACL,KAAK,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;IAChC,IAAGM,UAAU,IAAE,IAAI,IAAIA,UAAU,KAAGC,UAAU,IAAID,UAAU,KAAGE,UAAU,EAAC;MACtEJ,cAAc,CAACH,WAAW,CAAC;MAC3B,IAAGK,UAAU,IAAER,QAAQ,EAAC;QACpBO,YAAY,CAAClB,SAAS,CAACsB,WAAW,CAAC;MACvC,CAAC,MACG;QACAJ,YAAY,CAAClB,SAAS,CAACuB,WAAW,CAAC;MACvC;MACA;IACJ;EACJ;EACA,MAAMC,mBAAmB,GAACR,KAAK,CAACS,KAAK,CAAEC,IAAI,IAAIA,IAAI,IAAE,IAAI,CAAC;EAC1D,IAAGF,mBAAmB,EAAC;IACnBN,YAAY,CAAClB,SAAS,CAAC2B,IAAI,CAAC;EAChC;AACJ;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACb,KAAK,EAAEc,QAAQ,CAAC,GAAGjC,QAAQ,CAACkC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACvD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGrC,QAAQ,CAACa,QAAQ,CAAC;EACtD,MAAM,CAACI,WAAW,EAAEG,cAAc,CAAC,GAAGpB,QAAQ,CAAC,CAAC;EAChD,MAAM,CAACsC,SAAS,EAAEjB,YAAY,CAAC,GAAGrB,QAAQ,CAACG,SAAS,CAACoC,SAAS,CAAC;EAC/DxC,SAAS,CAAC,MAAI;IACVmB,WAAW,CAACC,KAAK,EAAEC,cAAc,EAAGC,YAAY,CAAC;EACrD,CAAC,EAAC,CAACF,KAAK,CAAC,CAAC;EACVpB,SAAS,CAAC,MAAI;IACV,IAAGoB,KAAK,CAACqB,IAAI,CAAEX,IAAI,IAAKA,IAAI,KAAG,IAAI,CAAC,EAAC;MACjCjB,UAAU,CAAC6B,IAAI,CAAC,CAAC;IACrB;EACJ,CAAC,EAAC,CAACtB,KAAK,CAAC,CAAC;EAEVpB,SAAS,CAAC,MAAI;IACV,IAAIuC,SAAS,KAAKnC,SAAS,CAACoC,SAAS,EAAC;MAClC9B,aAAa,CAACgC,IAAI,CAAC,CAAC;IACxB;EACJ,CAAC,EAAC,CAACH,SAAS,CAAC,CAAC;EACd,MAAMI,WAAW,GAACA,CAAA,KAAI;IAClBrB,YAAY,CAAClB,SAAS,CAACoC,SAAS,CAAC;IACjCN,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7BE,aAAa,CAACxB,QAAQ,CAAC;IACvBO,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EACD,MAAMuB,eAAe,GAAEC,KAAK,IAAG;IAC3B,IAAGN,SAAS,IAAEnC,SAAS,CAACoC,SAAS,EAAC;MAC9B;IACJ;IACA,IAAGpB,KAAK,CAACyB,KAAK,CAAC,KAAI,IAAI,EAAC;MACpB;IACJ;IACA,MAAMC,QAAQ,GAAC,CAAC,GAAG1B,KAAK,CAAC;IACzB0B,QAAQ,CAACD,KAAK,CAAC,GAACR,UAAU;IAC1BH,QAAQ,CAACY,QAAQ,CAAC;IAClB,IAAGT,UAAU,KAAGvB,QAAQ,EAAC;MACrBwB,aAAa,CAACvB,QAAQ,CAAC;IAC3B,CAAC,MACG;MACAuB,aAAa,CAACxB,QAAQ,CAAC;IAC3B;EAEJ,CAAC;EACH,oBACEL,OAAA;IAAAsC,QAAA,gBACItC,OAAA;MAAAsC,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB1C,OAAA,CAACP,KAAK;MAACgB,WAAW,EAAEA,WAAY;MAACmB,UAAU,EAAEA,UAAW;MAACjB,KAAK,EAAEA,KAAM;MAACgC,WAAW,EAAER;IAAgB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtG1C,OAAA,CAACN,QAAQ;MAACoC,SAAS,EAAEA;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjC1C,OAAA,CAACJ,KAAK;MAACkC,SAAS,EAAEA,SAAU;MAACc,OAAO,EAAEV;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAIV,CAAC;AAAAlB,EAAA,CArDKD,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAuDf,eAAeA,SAAS;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}